\setlength{\parindent}{0em}
\parskip 7.2pt 
# Each version, change: "This documents release"...

* COMMENT PRESCRIPT
* Quick Start
If you just want to try it *right now* using an installed system, do
these steps.  (Slightly more details follow this section.)

1. Copy ~/etc/tada/rsync.pwd~ from mountain or valley host to your home
   directory
2. Change ownership permission so it is owned by you, permissions=0400
3. Put FITS files in ~$fitsdir~ with structure: 
   ~<YYYYMMDD>/<instrument>/.../myfile.fits.fz~
4. Set ~$mtnhost~ to the Mountain machine you want to submit to
5. Submit your files
   : rsync -avz --password-file ~/rsync.pwd $fitsdir tada@$mtnhost::dropbox

That's it!  Files should start flowing from the mountain dropbox to
the mountain tada queue, to the valley tada queue, to the archive.

At any point, you can find what files have been submitted to the
mountain queue with:
  : rsync -a --password-file ~/.tada/rsync.pwd tada@$mtnhost::statusbox $fitsdir 
  : find $fitsdir -type f
This will also retrieve this User's Guide for the right release of
TADA into ~$fitsdir/tada-ug.pdf~

If you want to force resubmit of all files in your local stash:
  : find $fitsdir -name "*.fits" -o -name "*.fits.fz" -exec touch {} \;
then submit as in #5 above.

* About This Document
see also: 
  - [[file:tada-ops.org]]
  - sandbox/tada/RELEASE-*.txt

This document is intended to be a /brief go-to document/ for using
TADA. The intended audience is: Sean M. (OPS) and Steve P. (DEV)
This documents release 0.2.2 of TADA (more or less).

The source of this document is on [[https://github.com/pothiers/tada/blob/master/docs/tada-ug.org][github]].  It is rendered to PDF
format for rsync delivery.  But github does a reasonably good job of
rendering /.org/ files.

* Overview                                                           :export:
This release of TADA attempts to archive files put in a
*dropbox*. 

Personality files in this release are all YAML format.  (legacy
*.personality* format files not supported)  The YAML personalities are
installed on mountain and valley in: ~/var/tada/personalties~
Their source is in [[https://github.com/pothiers/tada-cli/tree/master/personalities][tada-cli]].

* What Can I do with Personality Files?                              :export:
Modify from an example YAML personality such as [[https://github.com/pothiers/tada-cli/blob/master/personalities/bok23m-90prime/bok23m-90prime.yaml][bok]]. The ~options~
section consists of FITS field names following by the value to stuff
into them (overwrite).  The ~params:calchdr:~ section contains a list
of "mapping functions" to apply to the FITS header to get new header
fields and values. 

** Options
You might find the [[https://github.com/pothiers/tada-cli/blob/master/personalities/all.csv][Table of personality options]] helpful. (produced
from [[https://raw.githubusercontent.com/pothiers/tada-cli/master/personalities/personality_table.py][personality_table.py]])

** calchdr (mapping functions)
The available ~calchdr values~ (mapping function names) are:
- DATEOBSfromDATE
- DTCALDATfromDATEOBSchile
- DTCALDATfromDATEOBStus
- IMAGTYPEtoOBSTYPE
- INSTRUMEtoDT
- PROPIDplusCentury
- PROPIDtoDT
- addTimeToDATEOBS
- bokOBSID
- fixTriplespec
- lookupPROPID
- trustHdrPropid
- trustSchedOrAAPropid
- trustSchedPropid
- tsepDATEOBS

** Other parameters
There are several other parameters under ~params~ in addition to
~calchdr~.  Unfortunately, they are carefully isolated in the code.
Here's a list that is more or less right:
  - OPS_PREAPPLY_UPDATE :: (default='NO') Or set = 'YES'
  - dry_run :: (default='0') Or set = '1'
  - filename :: (default=full path of file in mtn cache)
  - job_tag :: (default='')
  - jobid_type :: (default=None)  Other values: plain | seconds | (False)
  - source :: (default='raw')   Other values: pipeline | (dome)
  - warn_unknown :: (default=?)
  - test_resubmit :: (default='0') Or set = '1'

* Filename Flavors
- s<serno> :: adds a field to filename from DTSERNO
- t<tag> :: adds a field to filename of personality defines
     "job_tag". Used in smoke tests to add "TADASMOKE" to filenames

* Remediation
There is no defined or automatic remediation work-flow in this
release. There are a few main places you should look on BOTH Mountain
and Valley if you think something went wrong:

1. ~/var/log/tada/*~
   + Any non-empty *.err file in that directory is a bad sign. Read it.
   + Zero matches should return from ~grep -c " ERROR " /var/log/tada/pop.log~
2. ~dqcli -s~
   + Everything in the inactive queue failed to ingest.
3. get status of dropped files (and this User's Guide)
   : rsync -az --password-file ~/.tada/rsync.pwd  tada@$mtnhost::statusbox /tmp/statusbox/
   + With the above command, this doc will be in: ~/tmp/statusbox/tada-ug.pdf~

* COMMENT POSTSCRIPT
/(this section here to keep Document Comments out of the way)/

Something like the following codes can be inserted into doc by
invoking export dispatcher and selected "insert template" (C-c C-e #).

#+TITLE: [[https://github.com/pothiers/tada/blob/master/docs/tada-ug.org][TADA User's Guide]]
#+AUTHOR:    Steve Pothier
#+EMAIL:     pothier@noao.edu
#+DESCRIPTION: Instructions for using TADA
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:2 num:nil toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:nil
#+INFOJS_OPT: view:nil toc:t ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT: 
